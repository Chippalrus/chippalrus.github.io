---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

type Props =
{
  src: string | ImageMetadata;
  alt: string;
};

const props = Astro.props;
const { src, alt } = Astro.props;
---
{
  typeof src === 'string' ? (
    <img class:list={'img-'+alt} class="imgCRD hover:z-50 aspect-square rounded-lg object-cover" {...props} />
    <figure class:list={'img_'+alt} class="imgFigs transition-fade hidden row-start-2 top-0 left-0 bottom-0 right-0 md:target:z-50 col-start-1 row-end-1 col-span-full items-center">
      <img class="imgEX" {...props} />
    </figure>
  ) : (
    <Image class:list={'img-'+alt} class="imgCRD hover:z-50 aspect-square rounded-lg object-cover" {...props} />
    <figure class:list={'img_'+alt} class="imgFigs transition-fade hidden row-start-2 top-0 left-0 bottom-0 right-0 md:target:z-50 col-start-1 row-end-1 col-span-full items-center">
      <Image class="imgEX" {...props} />
    </figure>
  )
}
<style>
.imgEX
{
  margin-left:auto;
  margin-right:auto;
}
/*.imgCRD{filter: blur(2px);}*/
.imgCRD:hover
{
  filter: blur(0px);
	transform-style: preserve-3d;
  transform: perspective(800px) rotateY(27deg);
	box-shadow: 0 15px 25px rgba(0,0,0,0.2);
}
.activeIMG
{
  display:block;
}
</style>
<script define:vars={{ alt }} is:inline>
  const elemImg = document.querySelector( `.img-${alt}` );
  const elemFig = document.querySelector( `.img_${alt}` );
  elemImg.addEventListener('click', () => 
  { 
    const actIMG = document.querySelector( '.activeIMG' );
    if( actIMG != null ){ actIMG.classList.remove( 'activeIMG' ); }
    elemFig.classList.add( 'activeIMG' );
  });
</script>